// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  EthereumCall,
  EthereumEvent,
  SmartContract,
  EthereumValue,
  JSONValue,
  TypedMap,
  Entity,
  EthereumTuple,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class TargetUpdated extends EthereumEvent {
  get params(): TargetUpdated__Params {
    return new TargetUpdated__Params(this);
  }
}

export class TargetUpdated__Params {
  _event: TargetUpdated;

  constructor(event: TargetUpdated) {
    this._event = event;
  }

  get newTarget(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OwnerNominated extends EthereumEvent {
  get params(): OwnerNominated__Params {
    return new OwnerNominated__Params(this);
  }
}

export class OwnerNominated__Params {
  _event: OwnerNominated;

  constructor(event: OwnerNominated) {
    this._event = event;
  }

  get newOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OwnerChanged extends EthereumEvent {
  get params(): OwnerChanged__Params {
    return new OwnerChanged__Params(this);
  }
}

export class OwnerChanged__Params {
  _event: OwnerChanged;

  constructor(event: OwnerChanged) {
    this._event = event;
  }

  get oldOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Proxy extends SmartContract {
  static bind(address: Address): Proxy {
    return new Proxy("Proxy", address);
  }

  nominatedOwner(): Address {
    let result = super.call("nominatedOwner", []);
    return result[0].toAddress();
  }

  owner(): Address {
    let result = super.call("owner", []);
    return result[0].toAddress();
  }

  useDELEGATECALL(): boolean {
    let result = super.call("useDELEGATECALL", []);
    return result[0].toBoolean();
  }

  target(): Address {
    let result = super.call("target", []);
    return result[0].toAddress();
  }
}

export class NominateNewOwnerCall extends EthereumCall {
  get inputs(): NominateNewOwnerCall__Inputs {
    return new NominateNewOwnerCall__Inputs(this);
  }

  get outputs(): NominateNewOwnerCall__Outputs {
    return new NominateNewOwnerCall__Outputs(this);
  }
}

export class NominateNewOwnerCall__Inputs {
  _call: NominateNewOwnerCall;

  constructor(call: NominateNewOwnerCall) {
    this._call = call;
  }

  get _owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class NominateNewOwnerCall__Outputs {
  _call: NominateNewOwnerCall;

  constructor(call: NominateNewOwnerCall) {
    this._call = call;
  }
}

export class SetTargetCall extends EthereumCall {
  get inputs(): SetTargetCall__Inputs {
    return new SetTargetCall__Inputs(this);
  }

  get outputs(): SetTargetCall__Outputs {
    return new SetTargetCall__Outputs(this);
  }
}

export class SetTargetCall__Inputs {
  _call: SetTargetCall;

  constructor(call: SetTargetCall) {
    this._call = call;
  }

  get _target(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTargetCall__Outputs {
  _call: SetTargetCall;

  constructor(call: SetTargetCall) {
    this._call = call;
  }
}

export class AcceptOwnershipCall extends EthereumCall {
  get inputs(): AcceptOwnershipCall__Inputs {
    return new AcceptOwnershipCall__Inputs(this);
  }

  get outputs(): AcceptOwnershipCall__Outputs {
    return new AcceptOwnershipCall__Outputs(this);
  }
}

export class AcceptOwnershipCall__Inputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class AcceptOwnershipCall__Outputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class _emitCall extends EthereumCall {
  get inputs(): _emitCall__Inputs {
    return new _emitCall__Inputs(this);
  }

  get outputs(): _emitCall__Outputs {
    return new _emitCall__Outputs(this);
  }
}

export class _emitCall__Inputs {
  _call: _emitCall;

  constructor(call: _emitCall) {
    this._call = call;
  }

  get callData(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get numTopics(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get topic1(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get topic2(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get topic3(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }

  get topic4(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }
}

export class _emitCall__Outputs {
  _call: _emitCall;

  constructor(call: _emitCall) {
    this._call = call;
  }
}

export class SetUseDELEGATECALLCall extends EthereumCall {
  get inputs(): SetUseDELEGATECALLCall__Inputs {
    return new SetUseDELEGATECALLCall__Inputs(this);
  }

  get outputs(): SetUseDELEGATECALLCall__Outputs {
    return new SetUseDELEGATECALLCall__Outputs(this);
  }
}

export class SetUseDELEGATECALLCall__Inputs {
  _call: SetUseDELEGATECALLCall;

  constructor(call: SetUseDELEGATECALLCall) {
    this._call = call;
  }

  get value(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetUseDELEGATECALLCall__Outputs {
  _call: SetUseDELEGATECALLCall;

  constructor(call: SetUseDELEGATECALLCall) {
    this._call = call;
  }
}

export class ConstructorCall extends EthereumCall {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DefaultCall extends EthereumCall {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}
