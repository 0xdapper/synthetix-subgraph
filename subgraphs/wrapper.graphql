type Wrapper @entity {
  " wrapper address "
  id: ID!

  " address of wrapped token, null if ETH"
  tokenAddress: String!

  " the current amount of synths minted by this wrapper"
  amount: BigDecimal!

  " the current amount of synths minted by this wrapper in USD"
  amountInUSD: BigDecimal!

  " the maximum amount of synths that can be minted by this wrapper"
  maxAmount: BigDecimal!
}

type Mint @entity {
  " the transaction hash with a log index appended "
  id: ID!

  " address of the user minting "
  account: String!

  " amount of synth minted "
  principal: BigDecimal!

  " amount of fees collected "
  fee: BigDecimal!

  " total amount added to the wrapper "
  amountIn: BigDecimal!
}

type Burn @entity {
  " the transaction hash with a log index appended "
  id: ID!

  " address of the user burning "
  account: String!

  " amount of synth burned "
  principal: BigDecimal!

  " amount of fees collected "
  fee: BigDecimal!

  " total amount removed from the wrapper "
  amountOut: BigDecimal!
}

" we dont query this entity but only use it to store aggregate data we need during syncing "
type LatestRate @entity {
  " Name of synth. E.g. sUSD "
  id: ID!

  " Synth USD rate "
  rate: BigDecimal!

  " Address of the aggregator which produces current result "
  aggregator: Bytes!
}
