type InversePricingInfo @entity {
  " Name of inverse synth. E.g. iETH "
  id: ID!

  " whether or not this inverse synth has been frozen "
  frozen: Boolean!

  " configured upper limit "
  upperLimit: BigDecimal!

  " configured lower limit "
  lowerLimit: BigDecimal!

  " matching price point with long synth "
  entryPoint: BigDecimal!
}

type LatestRate @entity {
  " Name of synth. E.g. sUSD "
  id: ID!

  " Synth USD rate "
  rate: BigDecimal!

  " Address of the aggregator which produces current result "
  aggregator: Bytes!
}

" Latest Rates over time "
type RateUpdate @entity {
  " <transaction hash>-<currency key> "
  id: ID!

  " currencyKey for which this this rate update applies "
  currencyKey: Bytes!

  " currencyKey expressed as a string "
  synth: String!

  " the rate recorded at this timestamp "
  rate: BigDecimal!

  " the block which this rate was recorded "
  block: BigInt!

  " timestamp of the block in which the rate was recorded "
  timestamp: BigInt!
}
